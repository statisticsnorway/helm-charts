{{ template "chart.header" . }}

{{ template "chart.deprecationWarning" . }}

{{ template "chart.badgesSection" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.maintainersSection" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{- define "chart.valuetypes.email" }}
{{- end }}
{{ template "chart.valuetypes.email" . }}

{{ define "chart.valueDefaultColumnRender" }}
{{- $defaultValue := (default .Default .AutoDefault)  -}}
{{- $notationType := .NotationType }}
{{- if (and (hasPrefix "`" $defaultValue) (hasSuffix "`" $defaultValue) ) -}}
{{- $defaultValue = (toPrettyJson (fromJson (trimAll "`" (default .Default .AutoDefault) ) ) ) -}}
{{- $notationType = "json" }}
{{- end -}}
{{- if (eq $notationType "tpl" ) }}
<pre lang="{{ $notationType }}">
{{ .Key }}: |
{{- $defaultValue | nindent 2 }}
</pre>
{{- else if (eq $notationType "email") }}
<a href="mailto:{{ $defaultValue }}" style="color: green;">"{{ $defaultValue }}"</a>
{{- else }}
<pre lang="{{ $notationType }}">
{{ $defaultValue }}
</pre>
{{- end }}
{{ end }}

{{ define "chart.typeColumnRender" }}
{{- if (eq .Type "string/email") }}
<a href="#stringemail" title="{{- template "chart.valuetypes.email" -}}">{{.Type}}</a>
{{- else if (eq .Type "k8s/storage/persistent-volume/access-modes" )}}
<a target="_blank" 
   href="https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes"
   >{{- .Type }}</a>
{{- else }}
{{ .Type }}
{{- end }}
{{ end }}

{{ define "chart.valuesTableHtml" }}
<table>
	<thead>
		<th>Key</th>
		<th>Type</th>
		<th>Default</th>
		<th>Description</th>
	</thead>
	<tbody>
	{{- range .Values }}
		<tr>
			<td id="{{ .Key | replace "." "--" }}"><a href="./values.yaml#L{{ .LineNumber }}">{{ .Key }}</a></td>
			<td>{{- template "chart.typeColumnRender" . -}}</td>
			<td>
				<div style="max-width: 400px;">{{ template "chart.valueDefaultColumnRender" . }}</div>
			</td>
			<td>{{ if .Description }}{{ .Description }}{{ else }}{{ .AutoDescription }}{{ end }}</td>
		</tr>
	{{- end }}
	</tbody>
</table>
{{ end }}

{{ template "chart.valuesSectionHtml" . }}

## About Pod and Container Security

Pods are the smallest deployable Kubernetes unit and consist of one or more containers.
Pods are often a an attackers initial execution environment upon exploiting a container.
For this reason, Pods should be hardened to make exploitation more difficult and to limit
the impact of a successful compromise.

Preventing root execution by using non-root containers or a rootless container engine limits
the impact of a container compromise.

When configuring security contexts for pods and containers the aim is to be as strict as possible,
so that containers do not run as root user (UID 0) and with as few privileges as possible.

```text
If an application fails with the strict security context provided by this Helm chart,
the recommendation is to rebuild the application using a root-less container image.

For read/write access to a temporary folder use a "emptyDir" volume. See example further down.
```

### ContainerSecurityContext

This SecurityContext sets the security context for the main application.

If both the SecurityContext for a container and PodSecurityContext is set, the value specified in the
SecurityContext for the container takes precedence.

By default, this Helm chart sets a "restricted" security context for the application as shown below.
This ensures that the container follows the recommended security practice, and runs with as few privileges
as possible:

```yaml
ContainerSecurityContext:
  # If processes should be allowed to gain more privileges than its parent process.
  allowPrivilegeEscalation: false
  # If processes in container can run privileged. Setting this to `true` is equivalent
  # to running as root on the host.
  privileged: false
  # If container should have a read-only root filesystem.
  readOnlyRootFilesystem: true
  # Container must run as a non-root user (e.g. not run as UID 0).
  runAsNonRoot: true
  # The UID to run the entrypoint of the container process.
  # Defaults to the user specified in the image metadata if unspecified.
  runAsUser: 1000
  # The GID to run the entrypoint of the container process. Uses runtime default if unset.
  runAsGroup: 1000
  # The capabilities to add/drop when running containers.
  capabilities:
    drop: ["ALL"]
    add: []
  # Limit the range of system calls allowed.
  seccompProfile:
    # RuntimeDefault: As defined by the container runtime.
    type: RuntimeDefault
```

Please refer to the
[Kubernetes Guide for configuring a Security Context for a Pod or Container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/)
documentation and the
[SecurityContext specification](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#securitycontext-v1-core)
for more information.

### Workaround for read/write to temporary folders

If the application needs to read/write temporary data to a `/tmp` or a `/cache` folder, this can be achieved
**without** giving the full benefit of write access to the container by overriding the default `readOnlyRootFilesystem`
setting. The simplest way to do this is to add one or more `emptyDir` volumes to the HelmRelease. Example:

```
volumes:
  - name: tmp-volume
    emptyDir: {}
volumeMounts:
  - name: tmp-volume
    mountPath: /tmp
```

The `name` must be unique, but the `mountPath` can be customized to the applications needs. Remember that data
in these volumes will be lost on pod restart.

### PodSecurityContext

A PodSecurityContext sets the default security context for all containers in a pod.

If both the SecurityContext for a container and PodSecurityContext is set, the value specified in the
SecurityContext for the container takes precedence.

The default PodSecurityPolicy sets the "seccompProfile" type to "RuntimeDefault".

See the "[Values](#values)" section for information about the available configuration options.

Please refer to the Kubernetes
[PodSecurityContext](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#podsecuritycontext-v1-core)
specification for more information.

## Example values

### nodeSelector

Standard nodes are labeled "ssb-node: standard". Jupyter nodes are labeled "ssb-node: jupyter".

```yaml
nodeSelector:
  ssb-node: "jupyter"
```
See [nodeSelector](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector)
for more information.

### tolerations

Example of "toleration" to ensure POD is scheduled on a jupyter nodepool:
```yaml
tolerations:
  effect: "NoSchedule"
  key: "ssb-node"
  operator: "Equal"
  value: "ssb-jupyter"
```
See [taints and toleration](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
for more information.

### affinity

Alternative to nodeSelector.

Example: Avoid scheduling to a specific node:
```yaml
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
          - key: "ssb-node"
            operator: NotIn
            values: ["jupyter"]
```
Example: Schedule new pods on dedicated node for "jupyter":
```yaml
affinity:
  nodeAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
          - key: "ssb-node"
            operator: In
            values: ["jupyter"]
```
See [affinity and anti-affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
for more information.

### extraPorts

```yaml
extraPorts:
    # Name of port must start with the protocol (i.e. 'grpc').
    # The value is automatically truncated to 15 symbols.
    # Required.
  - name: "grpc-main"
    # Container port. Must not be the same as application containerport or any
    # other defined containerport.
    # Optional.
    containerport: 1408
    # Service port. Must not be the same as application serviceport or any
    # other defined serviceport.
    # Optional.
    serviceport:
    # Target port in the POD to redirect traffic to. If not specified this will
    # default to containerport.
    # Optional.
    targetport:
```

### environmentVariables:

```yaml
environmentVariables:
  - name: TEST_ENV_VARIABLE
    value: "I_AM_A_VALUE"
```

### configs

```yaml
configs:
  - name: application.properties
    mountPath: /etc
    config: |
      key1=value1
      key2=value2
  - name: config.yaml
    mountPath: /config
    config: |
      key1: value1
      key2: value2
```

### volumes

```yaml
volumes:
  - name: test-volume
    hostPath:
      path: /data
  - name: secret-data
    secret:
      # Secret must already exist
      secretName: my-secret-data
      items:
      - key: username
        path: my-group/my-username
```
See [usage and formatting](https://kubernetes.io/docs/concepts/storage/volumes/) for more details.

### volumeMounts

```yaml
volumeMounts:
  - name: test-volume
    mountPath: "/media/test-volume"
    readOnly: true
    # resulting file "username" will be stored under /media/secret-data/my-group/my-username/
  - name: secret-data
    mountPath: "/media/secret-data"
    readOnly: true
```

See [mounting configmap as volume](https://kubernetes.io/docs/concepts/storage/volumes/#configmap)
for more details.

### backends

```yaml
backends:
  - name: "dataset-access"
    namespace: "dapla"
  - name: "backend-service"
    namespace: "backend"
```

### routes

```yaml
routes:
  - name: "/auth"
    type: "prefix"
    serviceport: 8080
```

Please refer to the
[Kubernetes documentation](https://istio.io/docs/reference/config/networking/virtual-service/#StringMatch)
for valid values of "name" and "type".

### subdomains

```yaml
subdomains:
  - subdomain1
  - subdomain2
```

### urlhosts

```yaml
urlhosts:
  - testurl1
  - testurl2
```

{{ template "helm-docs.versionFooter" . }}
