{{- if and ( or (eq (toString .Values.networkpolicy.enabled) "true") (eq (toString .Values.networkpolicy.enabled) "True")) .Values.networkpolicy.enabled }}
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: np-{{ template "app.name" . }}
  labels:
{{ include "default.labels" . | indent 4 }}
spec:
  podSelector:
    matchLabels:
      app: {{ template "app.name" . }}
{{- if not .Values.networkpolicy.overrideDefaultPolicy }}
  ingress:
    # Allow prometheus scraping directly on container port
    - ports:
        # Istio-proxy metrics port
        - protocol: TCP
          port: 15090
      from:
        - namespaceSelector:
            matchLabels:
              name: monitoring
          podSelector:
            matchLabels:
              app: prometheus
              component: server
    # Allow access to the application through target port through proxy
    - ports:
        - protocol: TCP
          port: {{ include "app.targetPort" . }}
        {{- if .Values.extraPorts }}
        {{- range .Values.extraPorts }}
        - protocol: TCP
          port: {{ default .containerport .targetport }}
        {{- end }}
        {{- end }}
      from:
        - namespaceSelector: {}
{{- if and ( or (eq (toString .Values.metrics.enabled) "true") (eq (toString .Values.metrics.enabled) "True")) .Values.metrics.enabled }}
    # Allow prometheus scraping directly on container port
    - ports:
        # App metrics port
        - protocol: TCP
          port: {{ .Values.port.containerport }}
      from:
        - namespaceSelector:
            matchLabels:
              name: monitoring
          podSelector:
            matchLabels:
              app: prometheus
              component: server
{{- end }}

{{- else }}
{{ toYaml .Values.networkpolicy.overrideDefaultPolicy | trim |indent 2 | replace "'" "" }}
{{- end }}
{{- end }}
